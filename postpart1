<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>DRF Social Feed</title>
  <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@walletconnect/web3-provider@1.8.0/dist/umd/index.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 10px;
      background: #f0f2f5;
    }
    #uploadForm, .post-item {
      background: #fff;
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 6px;
      box-shadow: 0 1px 4px rgba(0,0,0,0.1);
    }
    .post-item img, .post-item video {
      width: 100%;
      max-height: 400px;
      object-fit: cover;
      border-radius: 6px;
    }
    .post-actions {
      margin-top: 10px;
    }
    .post-actions button {
      margin-right: 8px;
      padding: 6px 10px;
    }
    #postContainer {
      margin-top: 20px;
    }
    #adminLogin {
      background: #fff;
      padding: 15px;
      border-radius: 6px;
      margin-bottom: 20px;
      display: none;
    }
    #boostStats {
      padding: 15px;
      background: #fff;
      margin-bottom: 20px;
      border-radius: 6px;
    }
    .hidden {
      display: none;
    }
  </style>
</head>
<body>
  <div id="adminLogin">
    <h3>üîê Admin Login</h3>
    <input id="adminEmail" type="email" placeholder="Email"><br><br>
    <input id="adminPassword" type="password" placeholder="Password"><br><br>
    <button onclick="adminLogin()">Login</button>
    <p id="adminMsg" style="color:red;"></p>
  </div>

  <div id="boostStats" class="hidden">
    <h3>üìä Boost Analytics</h3>
    <p id="boostCount">Loading...</p>
  </div>

  <h2>üì§ Upload a Post</h2>
  <form id="uploadForm">
    <input type="file" id="fileInput" accept="image/*,video/*" required /><br><br>
    <textarea id="captionInput" placeholder="Enter caption..." required></textarea><br><br>
    <button type="submit">Upload</button>
  </form>

  <div id="postContainer"></div>

<script type="module">
  // ‚úÖ 1. Firebase Initialization
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-app.js";
  import {
    getFirestore,
    collection,
    addDoc,
    getDocs,
    query,
    where,
    deleteDoc,
    doc,
    serverTimestamp
  } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-firestore.js";
  import {
    getMessaging,
    getToken,
    onMessage
  } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-messaging.js";

  const firebaseConfig = {
    apiKey: "AIzaSyD***REDACTED***",
    authDomain: "your-app.firebaseapp.com",
    projectId: "your-app",
    storageBucket: "your-app.appspot.com",
    messagingSenderId: "1234567890",
    appId: "1:1234567890:web:abcdefg"
  };

    const db = getFirestore(app);
  const messaging = getMessaging();

  // Notification setup
  try {
    const token = await getToken(messaging, { vapidKey: 'YOUR_PUBLIC_VAPID_KEY' });
    console.log("FCM Token:", token);
  } catch (e) {
    console.warn("FCM permission denied or error.");
  }

  onMessage(messaging, (payload) => {
    alert(`üîî New Notification: ${payload.notification.title}`);
  });

  // Admin Login
  const ADMIN_EMAIL = "digitalrufiya@gmail.com";
  const ADMIN_PASS = "Digitalreminder@2025";

  let currentUserEmail = null;
  function loginAsAdmin() {
    const email = prompt("Enter admin email:");
    const pass = prompt("Enter password:");
    if (email === ADMIN_EMAIL && pass === ADMIN_PASS) {
      alert("‚úÖ Admin login successful.");
      currentUserEmail = ADMIN_EMAIL;
    } else {
      alert("‚ùå Invalid credentials.");
    }
  }

  // Call this for admin login
  // loginAsAdmin();

  // Web3 Boost Payment (USDC on BSC)
  async function payUSDC(postId) {
    if (typeof window.ethereum === "undefined") {
      return alert("Web3 wallet not detected. Install MetaMask.");
    }
    const provider = window.ethereum;
    const accounts = await provider.request({ method: "eth_requestAccounts" });
    const from = accounts[0];

    const usdcAddress = "0xd7D2802D433eEcE757Be13Ab06D09b3E7AbC390C";
    const to = usdcAddress;
    const amount = "1000000"; // 1 USDC with 6 decimals

    const txParams = {
      from,
      to,
      value: "0x0",
      data: "0xa9059cbb" + to.slice(2).padStart(64, '0') + parseInt(amount).toString(16).padStart(64, '0'),
      to: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d" // USDC BSC token address
    };

    try {
      await provider.request({
        method: "eth_sendTransaction",
        params: [txParams]
      });
      await updateBoost(postId);
      alert("‚úÖ Boost payment successful!");
    } catch (err) {
      console.error(err);
      alert("‚ùå Payment failed.");
    }
  }

  async function updateBoost(postId) {
    const postRef = doc(db, "boosts", postId);
    await setDoc(postRef, {
      boostedBy: currentUserEmail || "anonymous",
      postId,
      boostedAt: serverTimestamp(),
      expiresAt: Date.now() + (30 * 24 * 60 * 60 * 1000)
    });
  }

  // Inject boost button into posts
  function injectBoostButton(postId, container) {
    const btn = document.createElement("button");
    btn.textContent = "üöÄ Boost Post (1 USDC)";
    btn.onclick = () => payUSDC(postId);
    container.appendChild(btn);
  }

  // Display boost analytics (admin)
  async function showBoostAnalytics() {
    if (currentUserEmail !== ADMIN_EMAIL) return;
    const q = query(collection(db, "boosts"));
    const snapshot = await getDocs(q);
    let count = 0;
    snapshot.forEach(doc => count++);
    alert(`üìä Boosted Posts: ${count}`);
  }

  // Call this after admin login
  // showBoostAnalytics();
</script>
</body>
</html>
